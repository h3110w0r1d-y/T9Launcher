package com.h3110w0r1d.t9launcher.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

private val primaryLight = Color(0xFF775A0B)
private val onPrimaryLight = Color(0xFFFFFFFF)
private val primaryContainerLight = Color(0xFFFFDF9E)
private val onPrimaryContainerLight = Color(0xFF5B4300)
private val secondaryLight = Color(0xFF6B5D3F)
private val onSecondaryLight = Color(0xFFFFFFFF)
private val secondaryContainerLight = Color(0xFFF5E0BB)
private val onSecondaryContainerLight = Color(0xFF52452A)
private val tertiaryLight = Color(0xFF4A6547)
private val onTertiaryLight = Color(0xFFFFFFFF)
private val tertiaryContainerLight = Color(0xFFCCEBC4)
private val onTertiaryContainerLight = Color(0xFF334D31)
private val errorLight = Color(0xFFBA1A1A)
private val onErrorLight = Color(0xFFFFFFFF)
private val errorContainerLight = Color(0xFFFFDAD6)
private val onErrorContainerLight = Color(0xFF93000A)
private val backgroundLight = Color(0xFFFFF8F2)
private val onBackgroundLight = Color(0xFF1F1B13)
private val surfaceLight = Color(0xFFFFF8F2)
private val onSurfaceLight = Color(0xFF1F1B13)
private val surfaceVariantLight = Color(0xFFEDE1CF)
private val onSurfaceVariantLight = Color(0xFF4D4639)
private val outlineLight = Color(0xFF7F7667)
private val outlineVariantLight = Color(0xFFD0C5B4)
private val scrimLight = Color(0xFF000000)
private val inverseSurfaceLight = Color(0xFF353027)
private val inverseOnSurfaceLight = Color(0xFFF9EFE2)
private val inversePrimaryLight = Color(0xFFE9C16C)
private val surfaceDimLight = Color(0xFFE2D9CC)
private val surfaceBrightLight = Color(0xFFFFF8F2)
private val surfaceContainerLowestLight = Color(0xFFFFFFFF)
private val surfaceContainerLowLight = Color(0xFFFCF2E5)
private val surfaceContainerLight = Color(0xFFF6ECDF)
private val surfaceContainerHighLight = Color(0xFFF1E7D9)
private val surfaceContainerHighestLight = Color(0xFFEBE1D4)

private val primaryLightMediumContrast = Color(0xFF473300)
private val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
private val primaryContainerLightMediumContrast = Color(0xFF88681C)
private val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
private val secondaryLightMediumContrast = Color(0xFF41351B)
private val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
private val secondaryContainerLightMediumContrast = Color(0xFF7B6B4D)
private val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
private val tertiaryLightMediumContrast = Color(0xFF223C21)
private val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
private val tertiaryContainerLightMediumContrast = Color(0xFF587455)
private val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
private val errorLightMediumContrast = Color(0xFF740006)
private val onErrorLightMediumContrast = Color(0xFFFFFFFF)
private val errorContainerLightMediumContrast = Color(0xFFCF2C27)
private val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
private val backgroundLightMediumContrast = Color(0xFFFFF8F2)
private val onBackgroundLightMediumContrast = Color(0xFF1F1B13)
private val surfaceLightMediumContrast = Color(0xFFFFF8F2)
private val onSurfaceLightMediumContrast = Color(0xFF141109)
private val surfaceVariantLightMediumContrast = Color(0xFFEDE1CF)
private val onSurfaceVariantLightMediumContrast = Color(0xFF3C3529)
private val outlineLightMediumContrast = Color(0xFF595244)
private val outlineVariantLightMediumContrast = Color(0xFF746C5D)
private val scrimLightMediumContrast = Color(0xFF000000)
private val inverseSurfaceLightMediumContrast = Color(0xFF353027)
private val inverseOnSurfaceLightMediumContrast = Color(0xFFF9EFE2)
private val inversePrimaryLightMediumContrast = Color(0xFFE9C16C)
private val surfaceDimLightMediumContrast = Color(0xFFCEC5B8)
private val surfaceBrightLightMediumContrast = Color(0xFFFFF8F2)
private val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
private val surfaceContainerLowLightMediumContrast = Color(0xFFFCF2E5)
private val surfaceContainerLightMediumContrast = Color(0xFFF1E7D9)
private val surfaceContainerHighLightMediumContrast = Color(0xFFE5DBCE)
private val surfaceContainerHighestLightMediumContrast = Color(0xFFDAD0C3)

private val primaryLightHighContrast = Color(0xFF3A2900)
private val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
private val primaryContainerLightHighContrast = Color(0xFF5E4500)
private val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
private val secondaryLightHighContrast = Color(0xFF362B11)
private val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
private val secondaryContainerLightHighContrast = Color(0xFF55472C)
private val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
private val tertiaryLightHighContrast = Color(0xFF183218)
private val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
private val tertiaryContainerLightHighContrast = Color(0xFF355033)
private val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
private val errorLightHighContrast = Color(0xFF600004)
private val onErrorLightHighContrast = Color(0xFFFFFFFF)
private val errorContainerLightHighContrast = Color(0xFF98000A)
private val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
private val backgroundLightHighContrast = Color(0xFFFFF8F2)
private val onBackgroundLightHighContrast = Color(0xFF1F1B13)
private val surfaceLightHighContrast = Color(0xFFFFF8F2)
private val onSurfaceLightHighContrast = Color(0xFF000000)
private val surfaceVariantLightHighContrast = Color(0xFFEDE1CF)
private val onSurfaceVariantLightHighContrast = Color(0xFF000000)
private val outlineLightHighContrast = Color(0xFF322B1F)
private val outlineVariantLightHighContrast = Color(0xFF50483B)
private val scrimLightHighContrast = Color(0xFF000000)
private val inverseSurfaceLightHighContrast = Color(0xFF353027)
private val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
private val inversePrimaryLightHighContrast = Color(0xFFE9C16C)
private val surfaceDimLightHighContrast = Color(0xFFC0B8AB)
private val surfaceBrightLightHighContrast = Color(0xFFFFF8F2)
private val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
private val surfaceContainerLowLightHighContrast = Color(0xFFF9EFE2)
private val surfaceContainerLightHighContrast = Color(0xFFEBE1D4)
private val surfaceContainerHighLightHighContrast = Color(0xFFDDD3C6)
private val surfaceContainerHighestLightHighContrast = Color(0xFFCEC5B8)

private val primaryDark = Color(0xFFE9C16C)
private val onPrimaryDark = Color(0xFF3F2E00)
private val primaryContainerDark = Color(0xFF5B4300)
private val onPrimaryContainerDark = Color(0xFFFFDF9E)
private val secondaryDark = Color(0xFFD8C4A0)
private val onSecondaryDark = Color(0xFF3A2F15)
private val secondaryContainerDark = Color(0xFF52452A)
private val onSecondaryContainerDark = Color(0xFFF5E0BB)
private val tertiaryDark = Color(0xFFB0CFAA)
private val onTertiaryDark = Color(0xFF1D361C)
private val tertiaryContainerDark = Color(0xFF334D31)
private val onTertiaryContainerDark = Color(0xFFCCEBC4)
private val errorDark = Color(0xFFFFB4AB)
private val onErrorDark = Color(0xFF690005)
private val errorContainerDark = Color(0xFF93000A)
private val onErrorContainerDark = Color(0xFFFFDAD6)
private val backgroundDark = Color(0xFF17130B)
private val onBackgroundDark = Color(0xFFEBE1D4)
private val surfaceDark = Color(0xFF17130B)
private val onSurfaceDark = Color(0xFFEBE1D4)
private val surfaceVariantDark = Color(0xFF4D4639)
private val onSurfaceVariantDark = Color(0xFFD0C5B4)
private val outlineDark = Color(0xFF998F80)
private val outlineVariantDark = Color(0xFF4D4639)
private val scrimDark = Color(0xFF000000)
private val inverseSurfaceDark = Color(0xFFEBE1D4)
private val inverseOnSurfaceDark = Color(0xFF353027)
private val inversePrimaryDark = Color(0xFF775A0B)
private val surfaceDimDark = Color(0xFF17130B)
private val surfaceBrightDark = Color(0xFF3E382F)
private val surfaceContainerLowestDark = Color(0xFF110E07)
private val surfaceContainerLowDark = Color(0xFF1F1B13)
private val surfaceContainerDark = Color(0xFF231F17)
private val surfaceContainerHighDark = Color(0xFF2E2921)
private val surfaceContainerHighestDark = Color(0xFF39342B)

private val primaryDarkMediumContrast = Color(0xFFFFD783)
private val onPrimaryDarkMediumContrast = Color(0xFF322300)
private val primaryContainerDarkMediumContrast = Color(0xFFAF8C3D)
private val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
private val secondaryDarkMediumContrast = Color(0xFFEEDAB5)
private val onSecondaryDarkMediumContrast = Color(0xFF2F240C)
private val secondaryContainerDarkMediumContrast = Color(0xFFA08F6E)
private val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
private val tertiaryDarkMediumContrast = Color(0xFFC6E5BE)
private val onTertiaryDarkMediumContrast = Color(0xFF122B12)
private val tertiaryContainerDarkMediumContrast = Color(0xFF7B9876)
private val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
private val errorDarkMediumContrast = Color(0xFFFFD2CC)
private val onErrorDarkMediumContrast = Color(0xFF540003)
private val errorContainerDarkMediumContrast = Color(0xFFFF5449)
private val onErrorContainerDarkMediumContrast = Color(0xFF000000)
private val backgroundDarkMediumContrast = Color(0xFF17130B)
private val onBackgroundDarkMediumContrast = Color(0xFFEBE1D4)
private val surfaceDarkMediumContrast = Color(0xFF17130B)
private val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
private val surfaceVariantDarkMediumContrast = Color(0xFF4D4639)
private val onSurfaceVariantDarkMediumContrast = Color(0xFFE7DBC9)
private val outlineDarkMediumContrast = Color(0xFFBBB1A0)
private val outlineVariantDarkMediumContrast = Color(0xFF998F7F)
private val scrimDarkMediumContrast = Color(0xFF000000)
private val inverseSurfaceDarkMediumContrast = Color(0xFFEBE1D4)
private val inverseOnSurfaceDarkMediumContrast = Color(0xFF2E2921)
private val inversePrimaryDarkMediumContrast = Color(0xFF5D4400)
private val surfaceDimDarkMediumContrast = Color(0xFF17130B)
private val surfaceBrightDarkMediumContrast = Color(0xFF49443A)
private val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A0703)
private val surfaceContainerLowDarkMediumContrast = Color(0xFF211D15)
private val surfaceContainerDarkMediumContrast = Color(0xFF2C271F)
private val surfaceContainerHighDarkMediumContrast = Color(0xFF373229)
private val surfaceContainerHighestDarkMediumContrast = Color(0xFF423D34)

private val primaryDarkHighContrast = Color(0xFFFFEED1)
private val onPrimaryDarkHighContrast = Color(0xFF000000)
private val primaryContainerDarkHighContrast = Color(0xFFE5BE69)
private val onPrimaryContainerDarkHighContrast = Color(0xFF110A00)
private val secondaryDarkHighContrast = Color(0xFFFFEED1)
private val onSecondaryDarkHighContrast = Color(0xFF000000)
private val secondaryContainerDarkHighContrast = Color(0xFFD4C09D)
private val onSecondaryContainerDarkHighContrast = Color(0xFF110A00)
private val tertiaryDarkHighContrast = Color(0xFFD9F9D1)
private val onTertiaryDarkHighContrast = Color(0xFF000000)
private val tertiaryContainerDarkHighContrast = Color(0xFFACCBA6)
private val onTertiaryContainerDarkHighContrast = Color(0xFF000F01)
private val errorDarkHighContrast = Color(0xFFFFECE9)
private val onErrorDarkHighContrast = Color(0xFF000000)
private val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
private val onErrorContainerDarkHighContrast = Color(0xFF220001)
private val backgroundDarkHighContrast = Color(0xFF17130B)
private val onBackgroundDarkHighContrast = Color(0xFFEBE1D4)
private val surfaceDarkHighContrast = Color(0xFF17130B)
private val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
private val surfaceVariantDarkHighContrast = Color(0xFF4D4639)
private val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
private val outlineDarkHighContrast = Color(0xFFFBEEDC)
private val outlineVariantDarkHighContrast = Color(0xFFCCC1B0)
private val scrimDarkHighContrast = Color(0xFF000000)
private val inverseSurfaceDarkHighContrast = Color(0xFFEBE1D4)
private val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
private val inversePrimaryDarkHighContrast = Color(0xFF5D4400)
private val surfaceDimDarkHighContrast = Color(0xFF17130B)
private val surfaceBrightDarkHighContrast = Color(0xFF554F45)
private val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
private val surfaceContainerLowDarkHighContrast = Color(0xFF231F17)
private val surfaceContainerDarkHighContrast = Color(0xFF353027)
private val surfaceContainerHighDarkHighContrast = Color(0xFF403B31)
private val surfaceContainerHighestDarkHighContrast = Color(0xFF4C463C)

val LightAmberTheme =
    lightColorScheme(
        primary = primaryLight,
        onPrimary = onPrimaryLight,
        primaryContainer = primaryContainerLight,
        onPrimaryContainer = onPrimaryContainerLight,
        secondary = secondaryLight,
        onSecondary = onSecondaryLight,
        secondaryContainer = secondaryContainerLight,
        onSecondaryContainer = onSecondaryContainerLight,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        inversePrimary = inversePrimaryLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
    )

val DarkAmberTheme =
    darkColorScheme(
        primary = primaryDark,
        onPrimary = onPrimaryDark,
        primaryContainer = primaryContainerDark,
        onPrimaryContainer = onPrimaryContainerDark,
        secondary = secondaryDark,
        onSecondary = onSecondaryDark,
        secondaryContainer = secondaryContainerDark,
        onSecondaryContainer = onSecondaryContainerDark,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        inversePrimary = inversePrimaryDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
    )

val MediumContrastLightAmberTheme =
    lightColorScheme(
        primary = primaryLightMediumContrast,
        onPrimary = onPrimaryLightMediumContrast,
        primaryContainer = primaryContainerLightMediumContrast,
        onPrimaryContainer = onPrimaryContainerLightMediumContrast,
        secondary = secondaryLightMediumContrast,
        onSecondary = onSecondaryLightMediumContrast,
        secondaryContainer = secondaryContainerLightMediumContrast,
        onSecondaryContainer = onSecondaryContainerLightMediumContrast,
        tertiary = tertiaryLightMediumContrast,
        onTertiary = onTertiaryLightMediumContrast,
        tertiaryContainer = tertiaryContainerLightMediumContrast,
        onTertiaryContainer = onTertiaryContainerLightMediumContrast,
        error = errorLightMediumContrast,
        onError = onErrorLightMediumContrast,
        errorContainer = errorContainerLightMediumContrast,
        onErrorContainer = onErrorContainerLightMediumContrast,
        background = backgroundLightMediumContrast,
        onBackground = onBackgroundLightMediumContrast,
        surface = surfaceLightMediumContrast,
        onSurface = onSurfaceLightMediumContrast,
        surfaceVariant = surfaceVariantLightMediumContrast,
        onSurfaceVariant = onSurfaceVariantLightMediumContrast,
        outline = outlineLightMediumContrast,
        outlineVariant = outlineVariantLightMediumContrast,
        scrim = scrimLightMediumContrast,
        inverseSurface = inverseSurfaceLightMediumContrast,
        inverseOnSurface = inverseOnSurfaceLightMediumContrast,
        inversePrimary = inversePrimaryLightMediumContrast,
        surfaceDim = surfaceDimLightMediumContrast,
        surfaceBright = surfaceBrightLightMediumContrast,
        surfaceContainerLowest = surfaceContainerLowestLightMediumContrast,
        surfaceContainerLow = surfaceContainerLowLightMediumContrast,
        surfaceContainer = surfaceContainerLightMediumContrast,
        surfaceContainerHigh = surfaceContainerHighLightMediumContrast,
        surfaceContainerHighest = surfaceContainerHighestLightMediumContrast,
    )

val HighContrastLightAmberTheme =
    lightColorScheme(
        primary = primaryLightHighContrast,
        onPrimary = onPrimaryLightHighContrast,
        primaryContainer = primaryContainerLightHighContrast,
        onPrimaryContainer = onPrimaryContainerLightHighContrast,
        secondary = secondaryLightHighContrast,
        onSecondary = onSecondaryLightHighContrast,
        secondaryContainer = secondaryContainerLightHighContrast,
        onSecondaryContainer = onSecondaryContainerLightHighContrast,
        tertiary = tertiaryLightHighContrast,
        onTertiary = onTertiaryLightHighContrast,
        tertiaryContainer = tertiaryContainerLightHighContrast,
        onTertiaryContainer = onTertiaryContainerLightHighContrast,
        error = errorLightHighContrast,
        onError = onErrorLightHighContrast,
        errorContainer = errorContainerLightHighContrast,
        onErrorContainer = onErrorContainerLightHighContrast,
        background = backgroundLightHighContrast,
        onBackground = onBackgroundLightHighContrast,
        surface = surfaceLightHighContrast,
        onSurface = onSurfaceLightHighContrast,
        surfaceVariant = surfaceVariantLightHighContrast,
        onSurfaceVariant = onSurfaceVariantLightHighContrast,
        outline = outlineLightHighContrast,
        outlineVariant = outlineVariantLightHighContrast,
        scrim = scrimLightHighContrast,
        inverseSurface = inverseSurfaceLightHighContrast,
        inverseOnSurface = inverseOnSurfaceLightHighContrast,
        inversePrimary = inversePrimaryLightHighContrast,
        surfaceDim = surfaceDimLightHighContrast,
        surfaceBright = surfaceBrightLightHighContrast,
        surfaceContainerLowest = surfaceContainerLowestLightHighContrast,
        surfaceContainerLow = surfaceContainerLowLightHighContrast,
        surfaceContainer = surfaceContainerLightHighContrast,
        surfaceContainerHigh = surfaceContainerHighLightHighContrast,
        surfaceContainerHighest = surfaceContainerHighestLightHighContrast,
    )

val MediumContrastDarkAmberTheme =
    darkColorScheme(
        primary = primaryDarkMediumContrast,
        onPrimary = onPrimaryDarkMediumContrast,
        primaryContainer = primaryContainerDarkMediumContrast,
        onPrimaryContainer = onPrimaryContainerDarkMediumContrast,
        secondary = secondaryDarkMediumContrast,
        onSecondary = onSecondaryDarkMediumContrast,
        secondaryContainer = secondaryContainerDarkMediumContrast,
        onSecondaryContainer = onSecondaryContainerDarkMediumContrast,
        tertiary = tertiaryDarkMediumContrast,
        onTertiary = onTertiaryDarkMediumContrast,
        tertiaryContainer = tertiaryContainerDarkMediumContrast,
        onTertiaryContainer = onTertiaryContainerDarkMediumContrast,
        error = errorDarkMediumContrast,
        onError = onErrorDarkMediumContrast,
        errorContainer = errorContainerDarkMediumContrast,
        onErrorContainer = onErrorContainerDarkMediumContrast,
        background = backgroundDarkMediumContrast,
        onBackground = onBackgroundDarkMediumContrast,
        surface = surfaceDarkMediumContrast,
        onSurface = onSurfaceDarkMediumContrast,
        surfaceVariant = surfaceVariantDarkMediumContrast,
        onSurfaceVariant = onSurfaceVariantDarkMediumContrast,
        outline = outlineDarkMediumContrast,
        outlineVariant = outlineVariantDarkMediumContrast,
        scrim = scrimDarkMediumContrast,
        inverseSurface = inverseSurfaceDarkMediumContrast,
        inverseOnSurface = inverseOnSurfaceDarkMediumContrast,
        inversePrimary = inversePrimaryDarkMediumContrast,
        surfaceDim = surfaceDimDarkMediumContrast,
        surfaceBright = surfaceBrightDarkMediumContrast,
        surfaceContainerLowest = surfaceContainerLowestDarkMediumContrast,
        surfaceContainerLow = surfaceContainerLowDarkMediumContrast,
        surfaceContainer = surfaceContainerDarkMediumContrast,
        surfaceContainerHigh = surfaceContainerHighDarkMediumContrast,
        surfaceContainerHighest = surfaceContainerHighestDarkMediumContrast,
    )

val HighContrastDarkAmberTheme =
    darkColorScheme(
        primary = primaryDarkHighContrast,
        onPrimary = onPrimaryDarkHighContrast,
        primaryContainer = primaryContainerDarkHighContrast,
        onPrimaryContainer = onPrimaryContainerDarkHighContrast,
        secondary = secondaryDarkHighContrast,
        onSecondary = onSecondaryDarkHighContrast,
        secondaryContainer = secondaryContainerDarkHighContrast,
        onSecondaryContainer = onSecondaryContainerDarkHighContrast,
        tertiary = tertiaryDarkHighContrast,
        onTertiary = onTertiaryDarkHighContrast,
        tertiaryContainer = tertiaryContainerDarkHighContrast,
        onTertiaryContainer = onTertiaryContainerDarkHighContrast,
        error = errorDarkHighContrast,
        onError = onErrorDarkHighContrast,
        errorContainer = errorContainerDarkHighContrast,
        onErrorContainer = onErrorContainerDarkHighContrast,
        background = backgroundDarkHighContrast,
        onBackground = onBackgroundDarkHighContrast,
        surface = surfaceDarkHighContrast,
        onSurface = onSurfaceDarkHighContrast,
        surfaceVariant = surfaceVariantDarkHighContrast,
        onSurfaceVariant = onSurfaceVariantDarkHighContrast,
        outline = outlineDarkHighContrast,
        outlineVariant = outlineVariantDarkHighContrast,
        scrim = scrimDarkHighContrast,
        inverseSurface = inverseSurfaceDarkHighContrast,
        inverseOnSurface = inverseOnSurfaceDarkHighContrast,
        inversePrimary = inversePrimaryDarkHighContrast,
        surfaceDim = surfaceDimDarkHighContrast,
        surfaceBright = surfaceBrightDarkHighContrast,
        surfaceContainerLowest = surfaceContainerLowestDarkHighContrast,
        surfaceContainerLow = surfaceContainerLowDarkHighContrast,
        surfaceContainer = surfaceContainerDarkHighContrast,
        surfaceContainerHigh = surfaceContainerHighDarkHighContrast,
        surfaceContainerHighest = surfaceContainerHighestDarkHighContrast,
    )
